<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:base="clr-namespace:Dopamine.Core.Base;assembly=Dopamine.Core"
    xmlns:converters="clr-namespace:Dopamine.Converters"
    xmlns:dc="clr-namespace:Digimezzo.Foundation.WPF.Controls;assembly=Digimezzo.Foundation.WPF"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:pc="clr-namespace:Dopamine.Controls"
    xmlns:utils="clr-namespace:Dopamine.Utils">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Dopamine;component/Resources/Styles/FontStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
    <converters:InvertingBooleanToCollapsedConverter x:Key="InvertingBooleanToCollapsedConverter" />
    <converters:InvertingBooleanToVisibilityConverter x:Key="InvertingBooleanToVisibilityConverter" />
    <converters:AddValueConverter x:Key="AddValueConverter" />
    <converters:PathToImageConverter x:Key="PathToImageConverter" />
    <converters:AddEllipsisConverter x:Key="AddEllipsisConverter" />
    <converters:KeyToPathConverter x:Key="KeyToPathConverter" />
    <!--  ContextMenu  -->
    <ContextMenu x:Key="ListBoxArtistsContextMenu" x:Shared="False">
        <ContextMenu.Resources>
            <utils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}" />
            <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
        </ContextMenu.Resources>
        <MenuItem
            Command="{Binding DataContext.AddArtistsToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
            Header="{DynamicResource Language_Add_To_Now_Playing}"
            InputGestureText="" />
        <MenuItem DisplayMemberPath="Name" Header="{DynamicResource Language_Add_To_Playlist}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Command" Value="{Binding DataContext.AddArtistsToPlaylistCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                    <Setter Property="CommandParameter" Value="{Binding Name}" />
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemsSource>
                <CompositeCollection>
                    <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}" />
                    <Separator />
                    <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}" />
                </CompositeCollection>
            </MenuItem.ItemsSource>
        </MenuItem>
        <Separator />
        <MenuItem Command="{Binding DataContext.ShuffleSelectedArtistsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Header="{DynamicResource Language_Shuffle}">
            <MenuItem.Icon>
                <TextBlock
                    Margin="0,1,0,0"
                    FontSize="15"
                    Style="{StaticResource SegoeAssets}"
                    Text="&#xE8B1;" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>
    <!--  ListBoxItem  -->
    <Style x:Key="ListBoxArtistsItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ContextMenu" Value="{StaticResource ListBoxArtistsContextMenu}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource Brush_PrimaryText}" />
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <DockPanel>
                        <!--  Header  -->
                        <Button
                            Margin="10,5,10,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Command="{Binding DataContext.ShowArtistsZoomCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            Cursor="Hand"
                            DockPanel.Dock="Top"
                            Style="{DynamicResource TransparentButton}"
                            Visibility="{Binding IsHeader, Converter={StaticResource BooleanToCollapsedConverter}}">
                            <Grid
                                Width="26"
                                Height="26"
                                Margin="0,8,0,8"
                                HorizontalAlignment="Left">
                                <Viewbox
                                    Width="26"
                                    Height="26"
                                    Panel.ZIndex="0">
                                    <Path
                                        x:Name="Droplet"
                                        Data="{DynamicResource Droplet}"
                                        Fill="{DynamicResource Brush_Accent}" />
                                </Viewbox>
                                <Label
                                    Margin="0,-2,0,0"
                                    Padding="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="1"
                                    Content="{Binding Header}"
                                    FontSize="16"
                                    Foreground="{DynamicResource Brush_SemanticZoomText}" />
                            </Grid>
                        </Button>
                        <!--  Artist  -->
                        <Grid Margin="0,0">
                            <Grid Height="{Binding ActualHeight, ElementName=MainListItem}">
                                <pc:SourceChangedImage
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Stretch="UniformToFill">
                                    <pc:SourceChangedImage.Source>
                                        <Binding
                                            Converter="{StaticResource KeyToPathConverter}"
                                            IsAsync="True"
                                            Path="Thumbnail" />
                                    </pc:SourceChangedImage.Source>
                                    <pc:SourceChangedImage.Triggers>
                                        <EventTrigger RoutedEvent="pc:SourceChangedImage.SourceChanged">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="Opacity"
                                                        From="0"
                                                        To="1"
                                                        Duration="{x:Static base:Constants.SourceChangedImageChangedDuration}" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </pc:SourceChangedImage.Triggers>
                                </pc:SourceChangedImage>
                            </Grid>
                            <Border Name="OverlayBorder">
                                <Border.Background>
                                    <SolidColorBrush Color="#8000" />
                                </Border.Background>
                            </Border>
                            <Border
                                Name="SelectionBorder"
                                BorderThickness="15,0,0,0"
                                Opacity="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#00F" />
                                </Border.BorderBrush>
                            </Border>
                            <StackPanel
                                Name="MainListItem"
                                MinHeight="96"
                                VerticalAlignment="Top">
                                <TextBlock
                                    FontSize="20"
                                    Foreground="{DynamicResource Brush_PrimaryText}"
                                    Text="{Binding Name}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="WrapWithOverflow" />
                                <TextBlock
                                    Foreground="{DynamicResource Brush_SecondaryText}"
                                    Text="{Binding ArtistItemInfo}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>
                        </Grid>

                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectionBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectionBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Opacity" Storyboard.TargetName="OverlayBorder">
                                    <ColorAnimation
                                        Storyboard.TargetName="OverlayBorder"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#8fff"
                                        Duration="0:0:0.15" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Opacity" Storyboard.TargetName="OverlayBorder">
                                    <ColorAnimation
                                        Storyboard.TargetName="OverlayBorder"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#8000"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  ListBox  -->
    <Style x:Key="ListBoxArtists" TargetType="{x:Type ListBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxArtistsItem}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    </Style>
</ResourceDictionary>
